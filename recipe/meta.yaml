{% set version = "4Feb2025" %}
{% set date = datetime.datetime.strptime(version, "%d%b%Y") %}
{% set conda_version = "{:%Y.%m.%d}".format(date) %}

{% set build = 0 %}
{% set git_rev = "ac1009d905c804856aee9b420e762fcfaf413f63" %}


# {% set cuda_major = environ.get("cuda_compiler_version", "0.0").split(".")[0]|int %}

# Use a higher build number for prefered variants, to ensure that they are
# picked first by conda's solver, and installed where the platform supports it.

# {% if cuda_compiler_version != "None" %}
# {% set build = build + 10000 %}
# {% endif %}

{% if mpi == 'openmpi' %}
  {% set build = build + 2000 %}
{% endif %}

{% if mpi == 'mpich' %}
  {% set build = build + 1000 %}
{% endif %}

{% if mpi != 'nompi' %}
  {% set mpi_prefix = "mpi_" + mpi %}
{% else %}
  {% set mpi_prefix = "nompi" %}
{% endif %}


package:
  name: lammps-metatensor
  version: {{ conda_version }}

source:
  git_url: https://github.com/metatensor/lammps.git
  git_rev: {{ git_rev }}
  depth: 1

build:
  number: {{ build }}
  skip: True  # [win]
  # skip: True  # [cuda_compiler_version == "10.2"]
  # skip: True  # [cuda_compiler_version == "11.2"]
  # track_features:
  #   - cudatoolkit               # [cuda_compiler_version != "None"]
  # string: cuda{{ cuda_compiler_version | replace('.', '') }}_h{{ PKG_HASH }}_{{ mpi_prefix }}_git.{{ git_rev[:7] }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]
  # string: cpu_h{{ PKG_HASH }}_{{ mpi_prefix }}_git.{{ git_rev[:7] }}_{{ PKG_BUILDNUM }} # [cuda_compiler_version == "None"]
  string: cpu_h{{ PKG_HASH }}_{{ mpi_prefix }}_git.{{ git_rev[:7] }}_{{ PKG_BUILDNUM }}
#   script_env:
# {% if cuda_major == 11 %}
#     - Kokkos_OPT_ARGS=-DKokkos_ARCH_KEPLER35=ON
# {% endif %}
# {% if cuda_major == 12 %}
#     - Kokkos_OPT_ARGS=-DKokkos_ARCH_MAXWELL50=ON
# {% endif %}


requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ stdlib("c") }}
    # - {{ compiler('cuda') }}    # [cuda_compiler_version != "None"]
    - {{ mpi }}       # [build_platform != target_platform and mpi == "openmpi"]
    - make
    - cmake
    - pkg-config
    - llvm-openmp  # [osx]
    - libgomp      # [linux]

  host:
    - {{ mpi }}  # [mpi != 'nompi']
    # - cuda-version {{ environ.get("cuda_compiler_version") }}.*  # [cuda_compiler_version != "None"]
    # {% if cuda_major == 11 %}
    # - cudatoolkit {{ environ.get("cuda_compiler_version") }}.*
    # {% endif %}
    # {% if cuda_major == 12 %}
    # - nvidia/label/cuda-{{ environ.get("cuda_compiler_version") }}.*::cuda-toolkit # [cuda_compiler_version != "None"]
    # - cuda-cudart-dev
    # - cuda-driver-dev
    # {% endif %}
    - fftw * {{ mpi_prefix }}_*
    - plumed
    - libmetatensor-torch >=0.7.5,<0.8.0
    # always build against the CPU version of libtorch, we can still pick the
    # cuda one at runtime
    - libtorch * cpu*
  run:
    - {{ mpi }}  # [mpi != 'nompi']
    # - __cuda     # [cuda_compiler_version != "None"]
    - plumed
    - libmetatensor-torch >=0.7.5,<0.8.0

test:
  commands:
    - export OMPI_MCA_plm_rsh_agent=false
    - lmp -h  # [mpi == 'nompi']
    - mpirun -np 2 lmp -h  # [mpi != 'nompi']

about:
  home: https://docs.metatensor.org/metatomic/latest/engines/lammps.html
  license:  GPL-2.0-only
  license_family: GPL
  summary: 'Metatensor-enabled version of LAMMPS'
  description: Metatensor-enabled version of LAMMPS
  doc_url: https://docs.metatensor.org/metatomic/latest/engines/lammps.html
  dev_url: https://github.com/metatensor/lammps

extra:
  recipe-maintainers:
    - abmazitov
    - Luthaf
